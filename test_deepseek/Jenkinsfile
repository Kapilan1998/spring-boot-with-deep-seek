#!/usr/bin/env groovy

pipeline {
    agent {
        label 'offline'
    }

    environment {
        DEP_TRACK_API_URL = 'https://dtrack.homeit-system.de/api'
        DEP_TRACK_API_KEY = 'odt_LiwdxLe1XPY8608S0S6huqCQkDDlnz23'
        SBOM_FILE_PATH = 'target/bom.xml'
    }

    stages {
        stage("Build") {
            steps {
                withMaven {
                    // Build the project
                    sh "mvn clean install -DskipUnitTests=true -DskipTests=true -Dinvoker.skip=true -DskipITs=true -B"
                }
            }
            post {
                success {
                    // Display success message when Build stage is completed successfully
                    echo "Build stage successfully completed!"
                }
                failure {
                    // Display failure message if Build stage fails
                    echo "Build stage failed!"
                }
            }
        }

        stage('Generate SBOM') {
            steps {
                withMaven {
                    // Generate the SBOM file using CycloneDX
                    sh 'mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom'
                }
            }
            post {
                success {
                    // Display success message when SBOM is generated successfully
                    echo "SBOM file successfully generated!"
                }
                failure {
                    // Display failure message if SBOM generation fails
                    echo "SBOM file generation failed!"
                }
                always {
                    // Archive the generated SBOM file for reference
                    archiveArtifacts allowEmptyArchive: true, artifacts: '**/target/bom*.{json,xml}'
                }
            }
        }

        stage('Dependency Vulnerability Check') {
            steps {
                withMaven {
                    // Run the OWASP Dependency-Check for vulnerabilities
                    sh 'mvn org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=10.0 -Dformats=HTML,XML,JSON'
                }
            }
            post {
                success {
                    // Display success message when Dependency Vulnerability Check is successful
                    echo "Dependency Vulnerability check completed successfully!"
                }
                failure {
                    // Display failure message if the Dependency Vulnerability Check fails
                    echo "Dependency Vulnerability Check failed!"
                }
                always {
                    // Archive the reports generated by Dependency-Check
                    archiveArtifacts allowEmptyArchive: true, artifacts: '**/target/dependency-check-report*.{html,xml,json}'
                }
            }
        }

        stage('Upload SBOM to Dependency-Track') {
            steps {
                script {
                    // Check if SBOM file exists
                    if (fileExists(SBOM_FILE_PATH)) {
                        echo "Uploading SBOM to Dependency-Track..."

                        // Upload the SBOM file to Dependency-Track via its API
                        sh """
                            curl -X POST ${DEP_TRACK_API_URL}/v1/bom \
                                 -H "Authorization: ApiKey ${DEP_TRACK_API_KEY}" \
                                 -F "bom=@${SBOM_FILE_PATH}" \
                                 -F "project=b7968dbc-9345-4373-887f-425218725981"
                        """
                    } else {
                        echo "SBOM file not found at ${SBOM_FILE_PATH}!"
                    }
                }
            }
            post {
                success {
                    // Display success message when SBOM is uploaded to Dependency-Track
                    echo "SBOM file successfully uploaded to Dependency-Track!"
                }
                failure {
                    // Display failure message if SBOM upload fails
                    echo "Failed to upload SBOM file to Dependency-Track!"
                }
            }
        }
    }
}

