pipeline {
  agent any

  tools {
    maven 'Maven3'
  }

  environment {
    DEP_TRACK_API_URL = 'http://localhost:8082/api'
    DEP_TRACK_API_KEY = 'odt_dWinsHFt2G95wGSjLHG5igPmGFpHqtg3'
    SBOM_FILE_PATH = 'test_deepseek/target/bom.xml'
    PROJECT_UUID = '421a9c86-4dcb-46c0-9731-0bc6cc7442f9'
  }

  stages {
  

    stage('Build') {
      steps {
        script {
          try {
            withMaven(maven: 'Maven3') {
            bat 'cd test_deepseek && mvn clean install -DskipTests -Dmaven.test.skip=true'
            }
          } catch (Exception e) {
            currentBuild.result = 'FAILURE'
            throw e
          }
        }
      }
    }

    stage('Generate SBOM') {
      steps {
        withMaven {
          bat 'cd test_deepseek && mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom'
        }
      }
      post {
        success {
          echo "SBOM file successfully generated!"
        }
        failure {
          echo "SBOM file generation failed!"
        }
        always {
          archiveArtifacts allowEmptyArchive: true, artifacts: 'test_deepseek/target/bom.json'
          archiveArtifacts allowEmptyArchive: true, artifacts: 'test_deepseek/target/bom.xml'
        }
      }
    }

    stage('Upload SBOM to Dependency-Track') {
      steps {
        script {
          if (fileExists(SBOM_FILE_PATH)) {
            echo 'Uploading SBOM to Dependency-Track...'
            bat """
            curl -X "POST" "${DEP_TRACK_API_URL}/v1/bom" ^
              -H "Content-Type: multipart/form-data" ^
              -H "X-API-Key: ${DEP_TRACK_API_KEY}" ^
              -F "autoCreate=false" ^
              -F "project=421a9c86-4dcb-46c0-9731-0bc6cc7442f9" ^
              -F "bom=@${SBOM_FILE_PATH}"
            """
          } else {
            echo "SBOM file not found at ${SBOM_FILE_PATH}!"
          }
        }
      }
      post {
        success {
          echo 'SBOM file successfully uploaded to Dependency-Track!'
        }
        failure {
          echo 'Failed to upload SBOM file to Dependency-Track!'
        }
      }
    }


   stage('Fetch Vulnerability Counts') {
               steps {
                   script {
                       // Wait for Dependency-Track to analyze the SBOM (30 sec)
                       sleep(time: 30, unit: 'SECONDS')

                       // Fetch findings using Windows-compatible 'curl' (PowerShell)
                       bat """
                           curl -X GET "%DEP_TRACK_API_URL%/v1/finding/project/%PROJECT_UUID%/summary" ^
                             -H "X-API-Key: %DEP_TRACK_API_KEY%" ^
                             -H "Accept: application/json" ^
                             -o summary.json
                       """

                       // Parse and display results
                       if (fileExists('summary.json')) {
                           def summary = readJSON file: 'summary.json'
                           echo """
                           ===== Dependency-Track Results =====
                           CRITICAL : ${summary.critical ?: 0}
                           HIGH     : ${summary.high ?: 0}
                           MEDIUM   : ${summary.medium ?: 0}
                           LOW      : ${summary.low ?: 0}
                           UNASSIGNED: ${summary.unassigned ?: 0}
                           ===================================
                           """
                       } else {
                           error "Failed to fetch results (summary.json not found)"
                       }
                   }
               }
           }
       }
   }



  }
}
